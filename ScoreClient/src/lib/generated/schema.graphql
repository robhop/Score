schema {
  query: Query
  mutation: Mutation
  subscription: SubscriptionType
}

"""
The purpose of the `cost` directive is to define a `weight` for GraphQL types, fields, and arguments. Static analysis can use these weights when calculating the overall cost of a query or response.
"""
directive @cost(
  """
  The `weight` argument defines what value to add to the overall cost for every appearance, or possible appearance, of a type, field, argument, etc.
  """
  weight: String!
) on ARGUMENT_DEFINITION | ENUM | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | OBJECT | SCALAR

input AuthorInput {
  name: String!
}

type Book {
  author: String!
  title: String!
}

input BookInput {
  author: AuthorInput!
  title: String!
}

type Mutation {
  addBook(book: BookInput!): Book!
}

type Query {
  book: Book!
}

type SubscriptionType {
  bookAdded: Book
}